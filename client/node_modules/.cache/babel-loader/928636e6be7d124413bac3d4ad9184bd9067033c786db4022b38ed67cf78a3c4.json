{"ast":null,"code":"var _jsxFileName = \"/Users/crystal/Desktop/contact_management_project/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ToastContext from \"./ToastContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    toast\n  } = useContext(ToastContext);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    checkUserLoggedIn();\n  }, []);\n\n  //   // check if the user is logged in.\n  //   const checkUserLoggedIn = async () => {\n  //     try {\n  //       const res = await fetch(`http://localhost:3000/api/me`, {\n  //         method: \"GET\",\n  //         headers: {\n  //           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n  //         },\n  //       });\n  //       const result = await res.json();\n  //       if (!result.error) {\n  //         if (location.pathname === \"/login\") {\n  //           setTimeout(() => {\n  //             navigate(\"/\", { replace: true });\n  //           }, 500);\n  //         } else {\n  //           navigate(location.pathname ? location.pathname : \"/\");\n  //         }\n  //         setUser(result);\n  //       } else {\n  //         navigate(\"/login\", { replace: true });\n  //       }\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   };\n\n  // login request.\n  const loginUser = async userData => {\n    try {\n      const res = await fetch(`http://localhost:3000/api/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ...userData\n        })\n      });\n      const result = await res.json();\n      if (!result.error) {\n        localStorage.setItem(\"token\", result.token);\n        setUser(result.user);\n        toast.success(`Logged in ${result.user}`);\n        navigate(\"/\", {\n          replace: true\n        });\n      } else {\n        toast.error(result.error);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      loginUser,\n      user,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"STc17K4MmaE1kxnTuMpdn8oWBXA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useLocation","useNavigate","ToastContext","jsxDEV","_jsxDEV","AuthContext","AuthContextProvider","children","_s","toast","navigate","location","user","setUser","checkUserLoggedIn","loginUser","userData","res","fetch","method","headers","body","JSON","stringify","result","json","error","localStorage","setItem","token","success","replace","err","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/crystal/Desktop/contact_management_project/client/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ToastContext from \"./ToastContext\";\n\nconst AuthContext = createContext();\n\nexport const AuthContextProvider = ({ children }) => {\n  const { toast } = useContext(ToastContext);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    checkUserLoggedIn();\n  }, []);\n\n  //   // check if the user is logged in.\n  //   const checkUserLoggedIn = async () => {\n  //     try {\n  //       const res = await fetch(`http://localhost:3000/api/me`, {\n  //         method: \"GET\",\n  //         headers: {\n  //           Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n  //         },\n  //       });\n  //       const result = await res.json();\n  //       if (!result.error) {\n  //         if (location.pathname === \"/login\") {\n  //           setTimeout(() => {\n  //             navigate(\"/\", { replace: true });\n  //           }, 500);\n  //         } else {\n  //           navigate(location.pathname ? location.pathname : \"/\");\n  //         }\n  //         setUser(result);\n  //       } else {\n  //         navigate(\"/login\", { replace: true });\n  //       }\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   };\n\n  // login request.\n  const loginUser = async (userData) => {\n    try {\n      const res = await fetch(`http://localhost:3000/api/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ ...userData }),\n      });\n\n      const result = await res.json();\n      if (!result.error) {\n        localStorage.setItem(\"token\", result.token);\n        setUser(result.user);\n        toast.success(`Logged in ${result.user}`);\n\n        navigate(\"/\", { replace: true });\n      } else {\n        toast.error(result.error);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ loginUser, user, setUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtE,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAO,uCAAuC;AAC9C,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,gBAAGT,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMU,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM;IAAEC;EAAM,CAAC,GAAGZ,UAAU,CAACK,YAAY,CAAC;EAC1C,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdgB,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAMC,SAAS,GAAG,MAAOC,QAAQ,IAAK;IACpC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,iCAAgC,EAAE;QACzDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE,GAAGP;QAAS,CAAC;MACtC,CAAC,CAAC;MAEF,MAAMQ,MAAM,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC/B,IAAI,CAACD,MAAM,CAACE,KAAK,EAAE;QACjBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,MAAM,CAACK,KAAK,CAAC;QAC3ChB,OAAO,CAACW,MAAM,CAACZ,IAAI,CAAC;QACpBH,KAAK,CAACqB,OAAO,CAAE,aAAYN,MAAM,CAACZ,IAAK,EAAC,CAAC;QAEzCF,QAAQ,CAAC,GAAG,EAAE;UAAEqB,OAAO,EAAE;QAAK,CAAC,CAAC;MAClC,CAAC,MAAM;QACLtB,KAAK,CAACiB,KAAK,CAACF,MAAM,CAACE,KAAK,CAAC;MAC3B;IACF,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EAED,oBACE5B,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACC,KAAK,EAAE;MAAErB,SAAS;MAAEH,IAAI;MAAEC;IAAQ,CAAE;IAAAN,QAAA,EACvDA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChC,EAAA,CArEWF,mBAAmB;EAAA,QAEbL,WAAW,EACXD,WAAW;AAAA;AAAAyC,EAAA,GAHjBnC,mBAAmB;AAuEhC,eAAeD,WAAW;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}